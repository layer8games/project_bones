#pragma once

//=====Engine Includes=====
#include <Engine/Atom.h>
#include <Engine/GameObject.h>
#include <Engine/AABB.h>

namespace KE = KillerEngine;
namespace KC = KillerCollisions;

class Settlement : public KE::GameObject
{
public:
//==========================================================================================================================
//
//Constructors	 	
//
//==========================================================================================================================
	Settlement(void);

	~Settlement(void);

//==========================================================================================================================
//
//Virtual Functions
//
//==========================================================================================================================
	void v_Update(void) final;

//==========================================================================================================================
//
//Functions
//
//==========================================================================================================================
	inline void Damage(U32 dmg = 1)
	{
		_hp -= dmg;
	}

//==========================================================================================================================
//
//Accessors
//
//==========================================================================================================================
	inline U32 GetHP(void) const
	{
		return _hp;
	}

private:
	U32		 _hp;
	KC::AABB _boundingBox;

};//end Class

typedef shared_ptr<Settlement> p_Settlement;
